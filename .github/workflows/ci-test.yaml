name: CI

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
    
    - name: Install pre-commit
      run: |
        python -m pip install --upgrade pip
        pip install pre-commit
    
    - name: Run pre-commit hooks
      run: |
        pre-commit run trailing-whitespace --all-files
        pre-commit run end-of-file-fixer --all-files
        pre-commit run check-yaml --all-files
        pre-commit run check-added-large-files --all-files
        pre-commit run check-merge-conflict --all-files
        pre-commit run check-toml --all-files
        pre-commit run debug-statements --all-files
        pre-commit run mixed-line-ending --all-files
        pre-commit run ruff --all-files || true
        pre-commit run ruff-format --all-files || true
        pre-commit run black --all-files
    
    - name: Setup Micromamba for mypy
      uses: mamba-org/setup-micromamba@v1
      with:
        environment-name: mypy-env
        create-args: >-
          python=3.13
          pip
          numpy>=2.2
          mypy>=1.0.0
        cache-environment: true
    
    - name: Install package for mypy
      run: pip install -e .
      shell: micromamba-shell {0}
    
    - name: Run mypy
      run: mypy eventkit
      shell: micromamba-shell {0}

  test:
    needs: lint
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.13', '3.14']
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Micromamba
      uses: mamba-org/setup-micromamba@v1
      with:
        environment-name: test-env
        create-args: >-
          python=${{ matrix.python-version }}
          pip
          numpy>=2.2
          pytest>=7.0.0
          pytest-asyncio>=0.21.0
        cache-environment: true
        cache-environment-key: ${{ runner.os }}-py${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}
    
    - name: Install package
      run: pip install -e .
      shell: micromamba-shell {0}
        
    - name: Run tests
      run: pytest tests/ -v --tb=short
      shell: micromamba-shell {0}
      
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.os }}-${{ matrix.python-version }}
        path: |
          .coverage
          htmlcov/
        retention-days: 7
        
  coverage:
    needs: lint
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Micromamba
      uses: mamba-org/setup-micromamba@v1
      with:
        environment-name: coverage-env
        create-args: >-
          python=3.13
          pip
          numpy>=2.2
          pytest>=7.0.0
          pytest-asyncio>=0.21.0
          coverage[toml]
          pytest-cov
        cache-environment: true
    
    - name: Install package
      run: pip install -e .
      shell: micromamba-shell {0}
        
    - name: Run tests with coverage
      run: |
        pytest tests/ --cov=eventkit --cov-report=xml --cov-report=html --cov-report=term
      shell: micromamba-shell {0}
        
    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}